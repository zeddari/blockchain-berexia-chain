apiVersion: v1
kind: ConfigMap
metadata:
  name: orchestrator-service-config
data:
  application.properties: |
    # Application configuration
    spring.application.name=Orchestrator Service
    spring.application.version=0.0.1
    server.port=8080
    
    # Active profile configuration (from environment variable)
    spring.profiles.active=${ACTIVE_PROFILE:dev}

    # Common configuration for all profiles
    # Flowable configuration
    flowable.database-schema-update=true
    flowable.async-executor-activate=true
    flowable.rest.api.enabled=true
    flowable.process.definition-cache-limit=500
    
    # Jakarta EE specific configuration
    spring.mvc.pathmatch.matching-strategy=ant_path_matcher

    # Spring Actuator configuration
    management.endpoints.web.exposure.include=health,info,flowable
    management.info.env.enabled=true
    
    # RabbitMQ "Avis d'arrivee" exchange, queue and binding configuration
    rabbitmq.aa.queue=avis-arrivee-queue
    rabbitmq.aa.exchange=avis-arrivee-topic
    rabbitmq.aa.binding=avis-arrivee.binding
    
    # Blockchain configuration (common for both profiles)
    blockchain.ethereum.rpc.http=http://157.173.119.195:8545
    blockchain.ethereum.rpc.ws=ws://157.173.119.195:8546
    
    # Logging details
    logging.level.org.springframework.amqp=INFO
    logging.level.org.springframework.boot.autoconfigure.amqp=INFO
    logging.level.org.flowable=INFO
    
    #-----------------
    # DEV PROFILE
    #-----------------
    # Database configuration for dev profile
    spring.datasource.url=jdbc:mysql://mysql:3306/TradeChain?allowPublicKeyRetrieval=true&useSSL=false&createDatabaseIfNotExist=true
    spring.datasource.username=${MYSQL_USER}
    spring.datasource.password=${MYSQL_PASSWORD}
    spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

    # Hibernate configuration
    spring.jpa.hibernate.ddl-auto=update
    spring.jpa.show-sql=true
    spring.jpa.properties.hibernate.format_sql=true

    # RabbitMQ configuration for dev profile
    spring.rabbitmq.host=rabbitmq
    spring.rabbitmq.port=5672
    spring.rabbitmq.username=${RABBITMQ_USER}
    spring.rabbitmq.password=${RABBITMQ_PASSWORD}
    spring.rabbitmq.virtual-host=/

    # Microservices URLs for dev profile
    services.ship-management.url=http://ship-management-service:8081
    
    #-----------------
    # PROD PROFILE
    #-----------------
    # Database configuration for prod profile
    spring.config.activate.on-profile=prod
    spring.datasource.url=jdbc:mysql://mysql:3306/TradeChain?allowPublicKeyRetrieval=true&useSSL=false&createDatabaseIfNotExist=true
    spring.datasource.username=${MYSQL_USER}
    spring.datasource.password=${MYSQL_PASSWORD}
    spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

    # Hibernate configuration for prod profile
    spring.jpa.hibernate.ddl-auto=update
    spring.jpa.show-sql=false
    spring.jpa.properties.hibernate.format_sql=false

    # RabbitMQ configuration for prod profile
    spring.rabbitmq.host=${RABBITMQ_HOST:rabbitmq}
    spring.rabbitmq.port=${RABBITMQ_PORT:5672}
    spring.rabbitmq.username=${RABBITMQ_USER}
    spring.rabbitmq.password=${RABBITMQ_PASSWORD}
    spring.rabbitmq.virtual-host=/

    # Microservices URLs for prod profile
    services.ship-management.url=${SHIP_MANAGEMENT_URL:http://ship-management-service:8081} 