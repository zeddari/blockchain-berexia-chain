# Application configuration
spring.application.name=Orchestrator Service
spring.application.version=0.0.1
server.port=8983

# Active profile configuration
spring.profiles.active=dev

# Common configuration for all profiles
# Flowable configuration
flowable.database-schema=flowable
flowable.database-schema-update=false
flowable.history-level=full
flowable.async-executor-activate=true
flowable.job-executor-activate=true
flowable.process-definition-location-prefix=classpath*:/processes/
flowable.process-definition-location-suffixes=**.bpmn20.xml,**.bpmn
flowable.rest.api.enabled=true
flowable.process.definition-cache-limit=500

# Web3j Configuration
web3j.client-url=http://157.173.119.195:8545

# Blockchain Configuration
berexia.event.manager.blockchain.enabled=true
berexia.event.manager.blockchain.rpc-url=${blockchain.ethereum.rpc.http}
berexia.event.manager.blockchain.ship-arrival-contract=0x2F632b08EcE7E9DcA0fCff1F91c1D5Bc245440Eb
berexia.event.manager.blockchain.dap-contract=0x91227A9377f70670237Ed667Ad5D9017D1Bae688
berexia.event.manager.blockchain.private-key=0x8f2a55949038a9610f50fb23b5883af3b4ecb3c3bb792cbcefbd1542c692be63

# Jakarta EE specific configuration
spring.mvc.pathmatch.matching-strategy=ant-path-matcher

# Spring Actuator configuration
management.endpoints.web.exposure.include=health,info,flowable
management.info.env.enabled=true

# RabbitMQ "Avis d'arrivee" exchange, queue and binding configuration
rabbitmq.aa.queue=avis-arrivee-queue
rabbitmq.aa.exchange=avis-arrivee-topic
rabbitmq.aa.binding=avis-arrivee.binding

# Blockchain configuration (common for both profiles)
blockchain.ethereum.rpc.http=http://157.173.119.195:8545
blockchain.ethereum.rpc.ws=ws://157.173.119.195:8546
# Do not include private keys in version control! Use environment variables or encrypted configuration.
ETHEREUM_PRIVATE_KEY=0x8f2a55949038a9610f50fb23b5883af3b4ecb3c3bb792cbcefbd1542c692be63
blockchain.ethereum.credentials.private-key=${ETHEREUM_PRIVATE_KEY}
blockchain.ethereum.gas-price=0
blockchain.ethereum.gas-limit=6721975

# Smart contract addresses - These should be set after deployment
# The factory contract address can be configured to load an existing factory
blockchain.ethereum.contracts.factory-address=0x42699A7612A82f1d9C36148af9C77354759b210b
# Ship arrival and DAP contract addresses will be set after deployment by the factory
blockchain.ethereum.contracts.ship-arrival-address=0x2F632b08EcE7E9DcA0fCff1F91c1D5Bc245440Eb
blockchain.ethereum.contracts.dap-address=0x91227A9377f70670237Ed667Ad5D9017D1Bae688

# Legacy contract address - to be removed after migration
blockchain.ethereum.contract.ship-registry-address=${SHIP_REGISTRY_ADDRESS:0x0000000000000000000000000000000000000000}

# Logging details
logging.level.org.springframework.amqp=INFO
logging.level.org.springframework.boot.autoconfigure.amqp=INFO
logging.level.org.flowable=INFO

# Profile-specific configurations (these will be used by default local development)
# Set the appropriate profile with: -Dspring.profiles.active=dev or -Dspring.profiles.active=prod

#-----------------
# DEV PROFILE (default)
#-----------------
# Database configuration for dev profile
spring.datasource.url=jdbc:mysql://localhost:3306/TradeChain?allowPublicKeyRetrieval=true&useSSL=false&createDatabaseIfNotExist=true
spring.datasource.username=root
spring.datasource.password=Ayman019950
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Hibernate configuration
spring.jpa.hibernate.ddl-auto=create
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# RabbitMQ configuration for dev profile
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest
spring.rabbitmq.virtual-host=/

# Microservices URLs for dev profile
services.ship-management.url=http://localhost:8981

#-----------------
# PROD PROFILE
#-----------------
# Database configuration for prod profile
spring.datasource.url=jdbc:mysql://localhost:3306/TradeChain?allowPublicKeyRetrieval=true&useSSL=false&createDatabaseIfNotExist=true
spring.datasource.username=root
spring.datasource.password=Ayman019950
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Hibernate configuration
spring.jpa.hibernate.ddl-auto=create
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# RabbitMQ configuration for prod profile
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest
spring.rabbitmq.virtual-host=/

# Microservices URLs for prod profile
services.ship-management.url=http://localhost:8981